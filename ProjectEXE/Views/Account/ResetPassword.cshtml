@model ProjectEXE.ViewModel.AccountViewModel.ResetPasswordViewModel
@{
    ViewData["Title"] = "Đặt lại mật khẩu";
}

@section Styles {
    <link rel="stylesheet" href="~/css/reset-password.css?v=@DateTime.Now.Ticks" />
}

<div class="reset-password-wrapper">
    <div class="reset-password-container">
        <div class="reset-password-card">
            <!-- Reset Password Header -->
            <div class="reset-password-header">
                <div class="header-icon">
                    <i class="fas fa-key"></i>
                    <div class="icon-ripple"></div>
                </div>
                <h2 class="reset-title">Đặt lại mật khẩu</h2>
                <p class="reset-subtitle">Tạo mật khẩu mới cho tài khoản của bạn</p>
            </div>

            <!-- Security Notice -->
            <div class="security-notice">
                <div class="notice-icon">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <div class="notice-content">
                    <h6>Bảo mật tài khoản</h6>
                    <p>Mật khẩu mới sẽ được áp dụng ngay sau khi xác nhận thành công.</p>
                </div>
            </div>

            <!-- Reset Password Form -->
            <div class="reset-password-body">
                <form asp-action="ResetPassword" method="post" id="resetPasswordForm">
                    <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
                    <input type="hidden" asp-for="Email" />
                    <input type="hidden" asp-for="Token" />

                    <!-- Email Display -->
                    <div class="email-display">
                        <div class="email-icon">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div class="email-info">
                            <span class="email-label">Đặt lại mật khẩu cho:</span>
                            <span class="email-value">@Model.Email</span>
                        </div>
                    </div>

                    <!-- New Password -->
                    <div class="form-floating">
                        <input asp-for="Password" type="password" class="form-control" placeholder="Nhập mật khẩu mới" autocomplete="new-password" id="passwordInput" />
                        <label asp-for="Password">Mật khẩu mới</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('passwordInput', 'passwordIcon1')">
                            <i class="fas fa-eye" id="passwordIcon1"></i>
                        </button>
                        <span asp-validation-for="Password" class="field-validation-error"></span>
                    </div>

                    <!-- Password Strength Indicator -->
                    <div class="password-strength">
                        <div class="strength-bar">
                            <div class="strength-fill" id="strengthFill"></div>
                        </div>
                        <div class="strength-text" id="strengthText">Độ mạnh mật khẩu</div>
                    </div>

                    <!-- Confirm Password -->
                    <div class="form-floating">
                        <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Nhập lại mật khẩu mới" autocomplete="new-password" id="confirmPasswordInput" />
                        <label asp-for="ConfirmPassword">Xác nhận mật khẩu</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('confirmPasswordInput', 'passwordIcon2')">
                            <i class="fas fa-eye" id="passwordIcon2"></i>
                        </button>
                        <span asp-validation-for="ConfirmPassword" class="field-validation-error"></span>
                    </div>

                    <!-- Password Match Indicator -->
                    <div class="password-match" id="passwordMatch" style="display: none;">
                        <i class="fas fa-check-circle"></i>
                        <span>Mật khẩu khớp</span>
                    </div>

                    <!-- Password Requirements -->
                    <div class="password-requirements">
                        <h6>Yêu cầu mật khẩu:</h6>
                        <div class="requirements-grid">
                            <div class="requirement-item" data-requirement="length">
                                <i class="fas fa-times"></i>
                                <span>Ít nhất 8 ký tự</span>
                            </div>
                            <div class="requirement-item" data-requirement="uppercase">
                                <i class="fas fa-times"></i>
                                <span>Ít nhất 1 chữ hoa</span>
                            </div>
                            <div class="requirement-item" data-requirement="lowercase">
                                <i class="fas fa-times"></i>
                                <span>Ít nhất 1 chữ thường</span>
                            </div>
                            <div class="requirement-item" data-requirement="number">
                                <i class="fas fa-times"></i>
                                <span>Ít nhất 1 số</span>
                            </div>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn-reset-password" id="resetButton">
                        <i class="fas fa-key"></i>
                        <span id="resetText">Đặt lại mật khẩu</span>
                        <div class="btn-loader" id="btnLoader"></div>
                    </button>
                </form>
            </div>

            <!-- Reset Password Footer -->
            <div class="reset-password-footer">
                <div class="footer-links">
                    <a asp-action="Login" class="footer-link">
                        <i class="fas fa-arrow-left"></i>
                        Quay lại đăng nhập
                    </a>
                    <a asp-action="ForgotPassword" class="footer-link">
                        <i class="fas fa-question-circle"></i>
                        Cần trợ giúp?
                    </a>
                </div>
                <div class="security-tips">
                    <p><strong>Mẹo bảo mật:</strong> Sử dụng mật khẩu mạnh với sự kết hợp của chữ hoa, chữ thường, số và ký tự đặc biệt.</p>
                </div>
            </div>
        </div>

        <!-- Background Decoration -->
        <div class="decoration-elements">
            <div class="decoration-shape shape-1"></div>
            <div class="decoration-shape shape-2"></div>
            <div class="decoration-shape shape-3"></div>
            <div class="floating-icon icon-1">
                <i class="fas fa-lock"></i>
            </div>
            <div class="floating-icon icon-2">
                <i class="fas fa-shield-alt"></i>
            </div>
            <div class="floating-icon icon-3">
                <i class="fas fa-key"></i>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle functionality
            window.togglePassword = function(inputId, iconId) {
                const passwordInput = document.getElementById(inputId);
                const passwordIcon = document.getElementById(iconId);

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    passwordIcon.classList.remove('fa-eye');
                    passwordIcon.classList.add('fa-eye-slash');
                } else {
                    passwordInput.type = 'password';
                    passwordIcon.classList.remove('fa-eye-slash');
                    passwordIcon.classList.add('fa-eye');
                }
            };

            // Password strength checker
            const passwordInput = document.getElementById('passwordInput');
            const confirmPasswordInput = document.getElementById('confirmPasswordInput');

            if (passwordInput) {
                passwordInput.addEventListener('input', function() {
                    checkPasswordStrength(this.value);
                    checkPasswordRequirements(this.value);
                    checkPasswordMatch();
                });
            }

            if (confirmPasswordInput) {
                confirmPasswordInput.addEventListener('input', checkPasswordMatch);
            }

            function checkPasswordStrength(password) {
                const strengthFill = document.getElementById('strengthFill');
                const strengthText = document.getElementById('strengthText');

                if (!strengthFill || !strengthText) return;

                let strength = 0;
                const checks = [
                    /.{8,}/, // At least 8 characters
                    /[a-z]/, // Lowercase
                    /[A-Z]/, // Uppercase
                    /[0-9]/, // Numbers
                    /[^A-Za-z0-9]/ // Special characters
                ];

                checks.forEach(check => {
                    if (check.test(password)) strength++;
                });

                strengthFill.className = 'strength-fill';

                if (strength === 0) {
                    strengthText.textContent = 'Độ mạnh mật khẩu';
                } else if (strength <= 2) {
                    strengthFill.classList.add('weak');
                    strengthText.textContent = 'Yếu';
                } else if (strength === 3) {
                    strengthFill.classList.add('fair');
                    strengthText.textContent = 'Trung bình';
                } else if (strength === 4) {
                    strengthFill.classList.add('good');
                    strengthText.textContent = 'Tốt';
                } else {
                    strengthFill.classList.add('strong');
                    strengthText.textContent = 'Rất mạnh';
                }
            }

            function checkPasswordRequirements(password) {
                const requirements = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /[0-9]/.test(password)
                };

                Object.keys(requirements).forEach(req => {
                    const element = document.querySelector(`[data-requirement="${req}"]`);
                    if (element) {
                        const icon = element.querySelector('i');
                        if (requirements[req]) {
                            element.classList.add('valid');
                            icon.classList.remove('fa-times');
                            icon.classList.add('fa-check');
                        } else {
                            element.classList.remove('valid');
                            icon.classList.remove('fa-check');
                            icon.classList.add('fa-times');
                        }
                    }
                });
            }

            function checkPasswordMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                const matchIndicator = document.getElementById('passwordMatch');

                if (confirmPassword && password === confirmPassword) {
                    matchIndicator.style.display = 'flex';
                    confirmPasswordInput.classList.remove('is-invalid');
                    confirmPasswordInput.classList.add('is-valid');
                } else if (confirmPassword) {
                    matchIndicator.style.display = 'none';
                    confirmPasswordInput.classList.remove('is-valid');
                    confirmPasswordInput.classList.add('is-invalid');
                } else {
                    matchIndicator.style.display = 'none';
                    confirmPasswordInput.classList.remove('is-valid', 'is-invalid');
                }
            }

            // Form submission
            const resetForm = document.getElementById('resetPasswordForm');
            const resetButton = document.getElementById('resetButton');
            const resetText = document.getElementById('resetText');
            const btnLoader = document.getElementById('btnLoader');

            resetForm.addEventListener('submit', function() {
                // Add loading state
                resetButton.classList.add('loading');
                resetButton.disabled = true;
                resetText.textContent = 'Đang xử lý...';
                btnLoader.style.display = 'block';
            });

            // Enhanced form validation feedback
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.value.trim() !== '') {
                        this.classList.add('has-value');
                    } else {
                        this.classList.remove('has-value');
                    }
                });

                input.addEventListener('focus', function() {
                    this.classList.remove('is-invalid');
                    const errorSpan = this.parentNode.querySelector('.field-validation-error');
                    if (errorSpan) {
                        errorSpan.style.display = 'none';
                    }
                });
            });

            // Auto focus first input
            passwordInput.focus();

            // Ripple effect animation
            const iconContainer = document.querySelector('.header-icon');
            setInterval(() => {
                const ripple = document.querySelector('.icon-ripple');
                ripple.style.animation = 'none';
                setTimeout(() => {
                    ripple.style.animation = 'rippleEffect 3s ease-out infinite';
                }, 50);
            }, 3000);

            // Entrance animations
            const card = document.querySelector('.reset-password-card');
            setTimeout(() => {
                card.classList.add('entrance-complete');
            }, 100);
        });
    </script>
}