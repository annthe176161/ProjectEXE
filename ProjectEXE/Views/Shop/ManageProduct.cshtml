@model IEnumerable<ProjectEXE.ViewModel.ShopProductViewModel>

@{
    ViewData["Title"] = "Sản phẩm của Shop";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>@ViewData["Title"]</h1>
        <div>
            <span class="badge bg-info me-2">Tổng: @(Model?.Count() ?? 0) sản phẩm</span>
            <a asp-controller="Shop" asp-action="AddNewProduct" class="btn btn-primary">
                <i class="fas fa-plus"></i> Thêm sản phẩm mới
            </a>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <!-- Filter và Search bar -->
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm sản phẩm...">
                </div>
            </div>
            <div class="col-md-3">
                <select id="statusFilter" class="form-select">
                    <option value="">Tất cả trạng thái</option>
                    <option value="visible">Đang hiển thị</option>
                    <option value="hidden">Đang ẩn</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="stockFilter" class="form-select">
                    <option value="">Tất cả hàng hóa</option>
                    <option value="instock">Còn hàng</option>
                    <option value="outofstock">Hết hàng</option>
                </select>
            </div>
        </div>

        <div class="table-responsive shadow-sm rounded bg-white p-3">
            <table class="table table-striped table-hover" id="productsTable">
                <thead class="table-dark">
                    <tr>
                        <th style="width: 5%;">ID</th>
                        <th style="width: 25%;">@Html.DisplayNameFor(model => model.First().ProductName)</th>
                        <th style="width: 12%;" class="text-end">@Html.DisplayNameFor(model => model.First().Price)</th>
                        <th style="width: 15%;">@Html.DisplayNameFor(model => model.First().CategoryName)</th>
                        <th style="width: 12%;">@Html.DisplayNameFor(model => model.First().ConditionName)</th>
                        <th style="width: 10%;" class="text-center">Trạng thái</th>
                        <th style="width: 12%;">@Html.DisplayNameFor(model => model.First().CreatedAt)</th>
                        <th style="width: 9%;" class="text-center">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-product-name="@item.ProductName.ToLower()"
                            data-category="@item.CategoryName.ToLower()"
                            data-visible="@item.IsVisible.ToString().ToLower()"
                        @* data-stock="@item.IsInStock.ToString().ToLower()" *@>
                            <td>
                                <span class="badge bg-light text-dark">#@item.ProductId</span>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    @* Placeholder cho ảnh *@
                                    <div class="me-2">
                                        <div class="bg-light d-flex align-items-center justify-content-center"
                                             style="width: 40px; height: 40px; border-radius: 4px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="fw-semibold">@Html.DisplayFor(modelItem => item.ProductName)</div>
                                        @if (!string.IsNullOrEmpty(item.Brand))
                                        {
                                            <small class="text-muted">@item.Brand</small>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="text-end">
                                <span class="fw-bold text-success">@item.Price.ToString("N0") VNĐ</span>
                            </td>
                            <td>
                                <span class="badge bg-primary bg-opacity-10 text-primary">@Html.DisplayFor(modelItem => item.CategoryName)</span>
                            </td>
                            <td>
                                <span class="badge bg-secondary bg-opacity-10 text-secondary">@Html.DisplayFor(modelItem => item.ConditionName)</span>
                            </td>
                            <td class="text-center">
                                @if (item.IsVisible)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-eye me-1"></i>Hiển thị
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">
                                        <i class="fas fa-eye-slash me-1"></i>Ẩn
                                    </span>
                                }
                                @* Nếu có IsInStock trong ViewModel *@
                                @* <br>
                                @if (item.IsInStock)
                                {
                                    <span class="badge bg-success mt-1">Còn hàng</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">Hết hàng</span>
                                } *@
                            </td>
                            <td>
                                <div>@item.CreatedAt.ToString("dd/MM/yyyy")</div>
                                <small class="text-muted">@item.CreatedAt.ToString("HH:mm")</small>
                            </td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="EditProduct" asp-route-id="@item.ProductId"
                                       class="btn btn-outline-primary" title="Chỉnh sửa sản phẩm">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-outline-danger"
                                            onclick="confirmDelete(@item.ProductId, '@item.ProductName')"
                                            title="Xóa sản phẩm">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Statistics Summary -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card bg-light">
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-3">
                                <h5 class="text-primary">@Model.Count()</h5>
                                <small class="text-muted">Tổng sản phẩm</small>
                            </div>
                            <div class="col-md-3">
                                <h5 class="text-success">@Model.Count(p => p.IsVisible)</h5>
                                <small class="text-muted">Đang hiển thị</small>
                            </div>
                            <div class="col-md-3">
                                <h5 class="text-secondary">@Model.Count(p => !p.IsVisible)</h5>
                                <small class="text-muted">Đang ẩn</small>
                            </div>
                            <div class="col-md-3">
                                <h5 class="text-info">@Model.Select(p => p.CategoryName).Distinct().Count()</h5>
                                <small class="text-muted">Danh mục</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center mt-5">
            <div class="mb-4">
                <i class="fas fa-box-open fa-5x text-muted"></i>
            </div>
            <h4 class="text-muted">Chưa có sản phẩm nào</h4>
            <p class="text-muted mb-4">Bạn chưa có sản phẩm nào trong shop. Hãy thêm sản phẩm đầu tiên để bắt đầu bán hàng!</p>
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>Thêm sản phẩm đầu tiên
            </a>
        </div>
    }
</div>

<!-- Delete confirmation modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa sản phẩm <strong id="productNameToDelete"></strong> không?</p>
                <p class="text-muted">Hành động này không thể hoàn tác.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Xóa
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            filterTable();
        });

        document.getElementById('statusFilter').addEventListener('change', function() {
            filterTable();
        });

        document.getElementById('stockFilter').addEventListener('change', function() {
            filterTable();
        });

        function filterTable() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const stockFilter = document.getElementById('stockFilter').value;
            const rows = document.querySelectorAll('#productsTable tbody tr');

            rows.forEach(row => {
                const productName = row.getAttribute('data-product-name');
                const category = row.getAttribute('data-category');
                const visible = row.getAttribute('data-visible');
                const stock = row.getAttribute('data-stock');

                let showRow = true;

                // Search filter
                if (searchTerm && !productName.includes(searchTerm) && !category.includes(searchTerm)) {
                    showRow = false;
                }

                // Status filter
                if (statusFilter) {
                    if (statusFilter === 'visible' && visible !== 'true') showRow = false;
                    if (statusFilter === 'hidden' && visible !== 'false') showRow = false;
                }

                // Stock filter
                if (stockFilter && stock) {
                    if (stockFilter === 'instock' && stock !== 'true') showRow = false;
                    if (stockFilter === 'outofstock' && stock !== 'false') showRow = false;
                }

                row.style.display = showRow ? '' : 'none';
            });
        }

        // Delete confirmation
        function confirmDelete(productId, productName) {
            document.getElementById('productNameToDelete').textContent = productName;
            document.getElementById('deleteForm').action = '@Url.Action("DeleteProduct")/' + productId;

            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
    </script>
}